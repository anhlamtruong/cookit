// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_DATABASE_URL")
}

model User {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  email             String      @unique
  usesname          String      @unique 
  name              String?     
  rolesIds          String[]    @db.ObjectId
  roles             Role[]      @relation(fields: [rolesIds], references: [id])
  profileId         String?     @db.ObjectId
  profile           Profile?    
  status            UserStatus
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  lastLogin         DateTime?
  emailVerified     DateTime?
  hashedPassword    String?
  // Other fields relevant to your application
}

model Profile {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  userId            String     @unique @db.ObjectId
  user              User       @relation(fields: [userId], references: [id])
  phoneNumber       String?
  address           String?
  imageUrl          String?
  // Additional profile information
}

enum UserStatus {
  ACTIVE
  SUSPENDED
  EMAIL_VERIFIED
  // Other statuses as needed
}

model Role {
  id                String     @id @default(auto())  @map("_id") @db.ObjectId
  name              String     @unique
  userIds           String[]   @db.ObjectId
  users             User[]     @relation(fields: [userIds], references: [id])
  permissionsIds    String[]   @db.ObjectId
  permissions       Permission[] @relation(fields: [permissionsIds], references: [id])
}

model Permission {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId 
  name              String     @unique
  rolesIds          String[]   @db.ObjectId
  roles             Role[]     @relation(fields: [rolesIds], references: [id])
}

